{"externalDocs":{"description":"GitHub","url":"https://github.com/OpertusMundi/ingest"},"info":{"contact":{"email":"pmitropoulos@getmap.gr"},"description":"A simple service to ingest a KML or ShapeFile into a PostGIS capable PostgreSQL database and publish an associated layer to GeoServer.","title":"Ingest/Publish API","version":"0.1.0"},"openapi":"3.0.2","paths":{"/_health":{"get":{"description":"Get health status","operationId":"getHealth","responses":{"default":{"content":{"application/json":{"examples":{"example-1":{"value":"{\"status\": \"OK\"}"}},"schema":{"properties":{"detail":{"description":"more details on this failure (if failed)","type":"string"},"reason":{"description":"the reason of failure (if failed)","type":"string"},"status":{"description":"A status of 'OK' or 'FAILED'","type":"string"}},"type":"object"}}},"description":"An object with status information"}},"summary":"Get health status","tags":["Health"]}},"/endpoints/{ticket}":{"get":{"description":"Returns the WMS/WFS endpoints resulted from a ingestion/publication request corresponding to a specific ticket.","parameters":[{"description":"The ticket of the request","in":"path","name":"ticket","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"WFS":{"description":"WFS endpoint","type":"string"},"WMS":{"description":"WMS endpoint","type":"string"}},"type":"object"}}},"description":"The resulted endpoints."},"404":{"description":"Ticket not found or transform has not been completed."}},"summary":"Get the result of a request.","tags":["Endpoints"]}},"/ingest":{"post":{"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"properties":{"resource":{"description":"The vector file resolvable path.","type":"string"},"response":{"default":"prompt","description":"Determines whether the proccess should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.","enum":["prompt","deferred"],"type":"string"}},"required":["resource"],"type":"object"}},"multipart/form-data":{"schema":{"properties":{"resource":{"description":"The vector file.","format":"binary","type":"string"},"response":{"default":"prompt","description":"Determines whether the proccess should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.","enum":["prompt","deferred"],"type":"string"}},"required":["resource"],"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"WFS":{"description":"WFS endpoint","type":"string"},"WMS":{"description":"WMS endpoint","type":"string"}},"type":"object"}}},"description":"Ingestion / publication completed."},"202":{"content":{"application/json":{"schema":{"properties":{"endpoints":{"description":"The WMS/WFS endpoints to get the resulting resource when ready.","type":"string"},"status":{"description":"The *status* endpoint to poll for the status of the request.","type":"string"},"ticket":{"description":"The ticket corresponding to the request.","type":"string"}},"type":"object"}}},"description":"Accepted for processing, but ingestion/publish has not been completed.","links":{"GetStatus":{"description":"The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.","operationId":"getStatus","parameters":{"ticket":"$response.body#/ticket"}}}},"400":{"description":"Client error."}},"summary":"Ingest a vector file (Shapefile/KML) into PostGIS and publish the layer to GeoServer.","tags":["Ingest"]}},"/status/{ticket}":{"get":{"description":"Returns the status of a request corresponding to a specific ticket.","operationId":"getStatus","parameters":[{"description":"The ticket of the request","in":"path","name":"ticket","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"comment":{"description":"If ingestion/publication has failed, a short comment describing the reason.","type":"string"},"completed":{"description":"Whether ingestion/publication process has been completed or not.","type":"boolean"},"execution_time(s)":{"description":"The execution time in seconds.","type":"integer"},"requested":{"description":"The timestamp of the request.","format":"datetime","type":"string"},"success":{"description":"Whether the process completed succesfully.","type":"boolean"}},"type":"object"}}},"description":"Ticket found and status returned."},"404":{"description":"Ticket not found."}},"summary":"Get the status of a request.","tags":["Status"]}}}}
